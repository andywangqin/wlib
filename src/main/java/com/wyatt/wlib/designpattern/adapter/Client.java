package com.wyatt.wlib.designpattern.adapter;

/**
 * Created by wyatt on 2017/4/17.
 * 和其他模式的比较
 * 装饰模式(Decorator)：装饰模式改变了接口，将对象封装起来，加上新的功能。而适配器模式是将被适配的接口转换成能够被客户端代码理解的目标接口。
 * 外观模式(Facade)：外观模式是将之前的接口的复杂性抽象化形成的全新的接口，而适配器模式是将一个接口转换成另外一个，可以让不兼容的接口之间可以互相沟通。
 * 代理模式(Proxy): 代理模式提供同样的接口。而适配器模式提供不一样的接口。
 * 桥梁模式(Bridge): 桥梁模式使得抽象和实现独立起来，而适配器是用来将客户端的请求转发到被适配者，以适应已有的接口。
 */
public class Client {




}
